@mixin color-var($name, $light, $dark) {
    @at-root {
        body.dark {
            --#{$name}: #{$dark};
        }

        body:not(.dark) {
            --#{$name}: #{$light};
        }
    }
}

@mixin color($property, $light, $dark, $name) {
    @at-root {
        body.dark {
            --#{$name}: #{$dark};
        }

        body:not(.dark) {
            --#{$name}: #{$light};
        }
    }

    ;
    #{$property}: var(--#{$name});
}

:root {
    @include color-var(katex-red, red, red);
    @include color-var(katex-blue, blue, rgb(46, 172, 255));
    @include color-var(katex-purple, purple, rgb(255, 0, 255))
}

* {
    box-sizing: border-box;
}

html {
    height: 100%;
}

body {
    font-family: 'Poppins', sans-serif;
    margin: 0;
    font-size: 18px;

    height: 100%;

    @include color(color, black, white, text-color-main);
    @include color(background, white, linear-gradient(black, rgb(26, 0, 0)), bg-color-main);
    background-attachment: fixed;

    --link-light: rgb(255, 72, 0);
    --link-dark: rgb(255, 153, 0);

    @include color(_ignore, #afafaf, #4d4d4d, gray);
}

h1 {
    font-size: 66px;
    font-weight: 700;

    @media screen and (max-width: 768px) {
        font-size: 35px;
    }
}

h1,
h2 {
    text-transform: uppercase;
    margin-bottom: 0;
}

.date {
    font-size: 150%;
}

article,
main {
    >h1 {
        margin-top: 1rem;
        overflow: auto;
    }

    margin-left: auto;
    margin-right: auto;


    width:70%;

    @media screen and (max-width: 768px) {
        width: 90%;
    }
}

a {
    @include color(color, var(--link-light), var(--link-dark), color-link);

    text-decoration: none;

    &:hover {
        text-decoration: underline;
    }

    &.footnote-ref {
        text-decoration: none;
    }
}


blockquote {
    font-style: italic;
}

pre,
.sourceCode {
    @include color(background-color, rgb(230, 230, 230), #111111, bg-color-code);
    font-family: 'Fira Code', monospace;
}



code:not(.sourceCode) {
    @include color(color, rgb(160, 0, 0), rgb(230, 0, 0), inline-code-color);
    font-family: 'Fira Code', monospace;
}

div.sourceCode {
    padding-left: 1rem;
    padding-right: 1rem;

    overflow: auto;
}

pre.sourceCode.diff:not(:hover) {
    /* TODO: light mode */
    color: #bfbfbf;

    .ot, .op, .kw {
        color: #353535;
    }

    /* TODO: .co (?) */
    .dt {
        color: #6f6f6f;
    }

    /* TODO: .dv, .st, &.polaris .dt*/
}

pre.sourceCode, .diff-area {
    /*TODO: light mode*/
    color: var(--text-color-main);

    .ot,
    .op,
    .kw {
        @include color(color, rgb(122, 0, 0), rgb(255, 0, 0), haskell-kw);
    }

    .co {
        @include color(color, rgb(136, 136, 136), rgb(145, 145, 145), haskell-co);
    }

    .dt {
        @include color(color, rgb(160, 96, 0), rgb(255, 153, 0), haskell-dt);
    }

    .dv {
        @include color(color, rgb(209, 0, 0), #ff0000, haskell-dv);
    }

    .st {
        @include color(color, rgb(0, 150, 32), rgb(0, 185, 40), haskell-st)
    }

    &.polaris {
        .dt {
            @include color(color, #ff0000, #ff0000, polaris-repl)
        }
    }
}
.diff-area {
    .ot,
    .op,
    .kw {
        color: var(--haskell-kw) !important;
    }

    .co {
        color: var(--haskell-co) !important;
    }

    .dt {
        color: var(--haskell-dt) !important;
    }

    .dv {
        color: var(--haskell-dv) !important;
    }

    .st {
        color: var(--haskell-st) !important;
    }

    &.polaris {
        .dt {
            color: var(--polaris-repl) !important;
        }
    }
}


.multicode {
    display: grid;
    grid-template-columns: 1fr 1fr;

    @media screen and (max-width: 768px) {
        grid-template-columns: 1fr;
        grid-template-rows: 1fr 1fr;
        gap: 5px;
    }


}

/* The parent of the .lang span*/
.lang-p {
    margin-top: 0;
    margin-bottom: 0;

    background-color: var(--bg-color-code);
    overflow: auto;

    button {
        background: none;
        border: none;

        &:active {
            color: white;
        }
    }
}

.lang {
    display: block;
    float: right;

    @include color(background-color, rgb(255, 94, 73), rgb(94, 1, 1), lang-bg);
    @include color(color, black, white, lang-fg);

    padding-left: 1rem;
    padding-right: 1rem;
    padding-top: 5px;
    border-top-left-radius: 50%;

    $other-radius: 5%;

    border-bottom-left-radius: $other-radius;
    border-bottom-right-radius: $other-radius;
    border-top-right-radius: $other-radius;

}


/* navbar */
.navbar {
    display: grid;
    grid-template-columns: 1fr 2fr 0.5fr;

    @media screen and (max-width: 768px) {
        font-size: 80%;

        grid-template-columns: 1fr 1fr;

        .navigation.middle {
            display: none;
        }

        >* {
            margin: 0;
            border-bottom: rgb(46, 46, 46) solid 2px;
        }
    }

    @include color(background-color, #000000, #000000, navbar-bg);

    >* {
        padding: 1rem;

        @media screen and (max-width: 768px) {
            padding: 0.5rem;
        }
    }

    * {
        @include color(color, #ffffff, #ffffff, navbar-fg);
        font-weight: bold;
        text-decoration: none;
    }

    ul>* {
        display: inline-block;
    }
}

.navigation {
    text-align: center;

    vertical-align: middle;

    a:hover {
        text-decoration: none;
    }

    >.header {
        font-size: 250%;
        font-weight: bolder;

    }

    *:not(.header) {
        font-size: 150%;
    }
}

.dark-mode {
    border: none;
    padding: 1rem;
    padding-bottom: 0;
    background: none;
}

#dark-mode-light {
    color: white;
    font-weight: 300;
    /* hack to get a white emoji font */
    filter: grayscale(100%) brightness(200%);
}

/* /navbar */

/*index*/
.index>h1 {
    text-align: center;
}

.post-summaries {
    display: grid;
    grid-template-columns: 1fr auto;
    gap: 1rem;

    @media screen and (max-width: 768px) {
        grid-template-rows: repeat(1fr 0.2fr);
        grid-template-columns: 1fr;
    }

    * {
        font-size: 28px;

        @media screen and (max-width: 768px) {
            font-size: 22px;
        }

        text-transform: uppercase;
        text-decoration: none;

        font-weight: bold;

        @include color(color, black, white, summary-fg)
    }

    a:hover {
        @include color(color, rgb(160, 0, 0), red, summary-hover);
        text-decoration: none;
    }

    .date {
        text-align: right;
    }
}

/* /index */

/* about */
.about {
    h1 {
        text-align: center;
    }
}

article.about {
    width: 50%;
    @include color(background-color, white, black, about-article-color);
    padding: 3rem
}

.social-list {
    display: grid;
    margin-top: 2rem;
    grid-template-columns: repeat(6, 1fr);
    text-align: center;

    a {
        @include color(color, black, white, social-color);

        &:hover {
            @include color(color, var(--link-light), var(--link-dark), social-color-hover)
        }
    }
}

.about-background {
    background-image: url(/assets/about-background.png);
    background-size: contain;
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    z-index: -100;
}

/* /about */


.tooltip {
    position: absolute;
    background-color: #000000;
    color: white;
    padding: 1rem 1rem;
    border-radius: 15px;
    z-index: 100;

    code {
        @include color(color, rgb(255, 80, 80), rgb(255, 80, 80), tooltip-code-color);
    }
}

.tooltip-link {
    text-decoration: none;
    color: unset;

    &:hover {
        @include color(color, rgb(255, 123, 0), rgb(255, 123, 0), tooltip-code-hover-color);
        text-decoration: none;
    }
}

.tooltip-wrapper:not(:hover) .tooltip {
    display: none;
}

.dot-output {
    svg {
        width: 100%;

        display: block;
        margin-left: auto;
        margin-right: auto;    

        @include color(stroke, black, white, dot-svg-stroke);
        @include color(fill, black, white, dot-svg-fill-color);

        text {
            stroke: none;
        }
    }
}

table {
    margin-left: auto;
    margin-right: auto;
}

.grid.parent {
    display: grid;

    &.column1 {
        grid-template-columns: 1fr;
    }

    &:not(.column1) {
        grid-template-columns: 1fr 1fr;
    }

}

.grid:not(.parent) {
    overflow: hidden;
}

.haskell-logo-light {
    /* Yes, I am abusing color here to ensure that only one
       logo is visible at a time. Fight me. */
    @include color(display, unset, none, light-logo-visibility)
}

.haskell-logo-dark {
    @include color(display, none, unset, dark-logo-visibility)
}

details.haskell-specific {
    border: 1px solid;
    border-radius: 4px;

    @include color(border-color, #aaa, rgb(80, 80, 80), haskell-spicific-border);

    @include color(background-color, rgb(242, 226, 255), rgb(80, 56, 100), haskell-specific-bg);

    summary {
        &:hover {
            @include color(background-color, rgb(210, 189, 228), rgb(129, 95, 156), haskell-specific-bg-hover)
        }

        cursor: pointer;

        &::marker {
            content: "";
        }

        padding: 0.5rem;

        img {
            height: 1.5rem;
        }
    }

    .content {
        margin: 0 0.5rem
    }
}

/* Katex does not support \textsc, so we use this hack to interpret \textmd as (effectively) \textsc.

   \textmd *usually* set's the font weight to 'medium'. This is the default, so the only use of this
   would be resetting the font weight inside something like \textbf. This has never been necessary on 
   this site so we resuse the CSS class to emulate \textsc instead. */
.katex .textmd {
    font-variant: small-caps;
}

.code-explanation {
    display: grid;
    grid-template-columns: 1fr 1fr;

    padding-left: 2rem;

    p {
        border: 1px black;
    }
}
